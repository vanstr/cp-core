# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

POST          /api/login                       controllers.AuthorizationApi.login()
GET           /api/user                        controllers.AuthorizationApi.getUser()
POST          /api/user                        controllers.AuthorizationApi.registerUser()
DELETE        /api/user                        controllers.AuthorizationApi.removeAccount()
GET           /api/logout                      controllers.AuthorizationApi.logout()

#TODO change format /dropbox/action
GET           /api/dropboxAuthUrl              controllers.AuthorizationDropboxApi.getAuthUrl()
GET           /api/dropboxAuthComplete         controllers.AuthorizationDropboxApi.authComplete(code: String ?= "")
DELETE        /api/dropbox                     controllers.AuthorizationDropboxApi.removeAccount()

GET           /api/driveAuthUrl                controllers.AuthorizationGDriveApi.getAuthUrl()
GET           /api/driveAuthComplete           controllers.AuthorizationGDriveApi.authComplete(code: String ?= "")
DELETE        /api/drive                       controllers.AuthorizationGDriveApi.removeAccount()


# TODO, why not introduce unique ID for song
GET           /api/link                        controllers.ContentApi.getFileSrc(cloudId: Long, fileId: String)
GET           /api/playList                    controllers.ContentApi.getPlayList()

GET           /api/playList/:playListId        controllers.ContentApi.getPlayListById(playListId: Long)
GET           /api/playLists                   controllers.ContentApi.getPlayLists()
DELETE        /api/playList/:playListId        controllers.ContentApi.deletePlayList(playListId: Long)

POST          /api/saveSongMetadata            controllers.ContentApi.saveSongMetadata()
POST          /api/playList                    controllers.ContentApi.addPlayList()

POST          /api/playListSong                controllers.ContentApi.addSongsToPlayList()
DELETE        /api/playListSong                controllers.ContentApi.removeSongFromPlayList()

# Map static resources from the /public folder to the /assets URL path
GET           /                                controllers.Assets.at(path="/public", file="index.html")
GET           /*file                           controllers.Assets.at(path="/public", file)