# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET           /api/user                        controllers.AuthorizationApi.getUser()
DELETE        /api/user                        controllers.AuthorizationApi.removeAccount()
POST          /api/user                        controllers.AuthorizationApi.updateUser()
POST          /api/user/password               controllers.AuthorizationApi.updatePassword()
POST          /api/login                       controllers.AuthorizationApi.login()
GET           /api/logout                      controllers.AuthorizationApi.logout()
POST          /api/register                    controllers.AuthorizationApi.registerUser()

#TODO change format /dropbox/action
GET           /api/dropbox/url/authorize       controllers.AuthorizationDropboxApi.getAuthorizationUrl()
GET           /api/dropbox/url/add             controllers.AuthorizationDropboxApi.getAddingUrl()
GET           /api/dropbox/authorised          controllers.AuthorizationDropboxApi.authComplete(code: String ?= "")
GET           /api/dropbox/added               controllers.AuthorizationDropboxApi.addingComplete(code: String ?= "")
DELETE        /api/dropbox                     controllers.AuthorizationDropboxApi.removeAccount()


GET           /api/drive/url/authorize         controllers.AuthorizationGDriveApi.getAuthorizationUrl()
GET           /api/drive/url/add               controllers.AuthorizationGDriveApi.getAddingUrl()
GET           /api/drive/authorised            controllers.AuthorizationGDriveApi.authComplete(code: String ?= "")
GET           /api/drive/added                 controllers.AuthorizationGDriveApi.addingComplete(code: String ?= "")
DELETE        /api/drive                       controllers.AuthorizationGDriveApi.removeAccount()


# TODO, why not introduce unique ID for song
GET           /api/link                        controllers.ContentApi.getFileSrc(cloudId: Long, fileId: String)
GET           /api/playList                    controllers.ContentApi.getPlayList()

GET           /api/playList/:playListId        controllers.ContentApi.getPlayListById(playListId: Long)
GET           /api/playLists                   controllers.ContentApi.getPlayLists()
DELETE        /api/playList/:playListId        controllers.ContentApi.deletePlayList(playListId: Long)

POST          /api/saveSongMetadata            controllers.ContentApi.saveSongMetadata()
POST          /api/playList                    controllers.ContentApi.addPlayList()

POST          /api/playListSong                controllers.ContentApi.addSongsToPlayList()
DELETE        /api/playListSong                controllers.ContentApi.removeSongFromPlayList()

# Map static resources from the /public folder to the /assets URL path
GET           /                                controllers.Assets.at(path="/public", file="index.html")
GET           /*file                           controllers.Assets.at(path="/public", file)